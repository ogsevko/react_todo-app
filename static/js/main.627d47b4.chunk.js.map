{"version":3,"sources":["components/TodoItem.js","components/TodoShape.js","components/TodoList.js","components/NewTodo.js","components/TodoCount.js","components/TodosFilter.js","App.js","index.js"],"names":["TodoItem","PropTypes","shape","id","string","isRequired","title","completed","bool","state","todoTitle","isEditing","handleDoubleClick","setState","prevState","handleChange","event","target","value","handleKeyPress","todoId","key","preventDefault","saveEditedTodo","props","replace","length","handleKeyDown","this","todo","onCheck","onDelete","className","classNames","editing","type","checked","onChange","onDoubleClick","onClick","edit","onKeyPress","onKeyDown","ref","input","focus","React","Component","TodoList","todos","handleCheck","handleDelete","map","item","defaultProps","NewTodo","addNewTodo","uuid","placeholder","TodoCount","todoLength","TodosFilter","handleFilter","handleFilterAll","isAllSelected","isActiveSelected","isCompletedSelected","selected","App","backupTodos","todosBackUp","backupCheck","todoCopy","backupToggleAll","backupToggle","newTodo","filter","toggleAll","every","clearCompleted","callback","innerHTML","editedTodo","todosFromStorage","localStorage","getItem","JSON","parse","currentState","setItem","stringify","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.627d47b4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TodoShape } from './TodoShape';\n\nexport class TodoItem extends React.Component {\n  state = {\n    todoTitle: '',\n    isEditing: false,\n  }\n\n  handleDoubleClick = (title) => {\n    this.setState(prevState => ({\n      isEditing: !prevState.isEditing,\n      todoTitle: title,\n    }));\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      todoTitle: event.target.value,\n    });\n  }\n\n  handleKeyPress = (event, todoId) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      const { saveEditedTodo } = this.props;\n\n      if (this.state.todoTitle.replace(/\\s+/g, '').length !== 0) {\n        saveEditedTodo({\n          id: todoId,\n          title: this.state.todoTitle,\n          completed: false,\n        });\n\n        this.setState({\n          todoTitle: '',\n          isEditing: false,\n        });\n      }\n    }\n  }\n\n  handleKeyDown = (event) => {\n    if (event.key === 'Escape') {\n      this.setState({\n        isEditing: false,\n      });\n    }\n  }\n\n  render() {\n    const { todo, onCheck, onDelete } = this.props;\n\n    return (\n      <li\n        className={\n          classNames(\n            { completed: todo.completed },\n            { editing: this.state.isEditing },\n          )\n        }\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={todo.id}\n            checked={todo.completed}\n            onChange={() => onCheck(todo.id)}\n          />\n          <label\n            onDoubleClick={() => this.handleDoubleClick(todo.title)}\n          >\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => onDelete(todo.id)}\n          />\n        </div>\n        {\n          this.state.isEditing\n            ? (\n              <input\n                type=\"text\"\n                value={this.state.todoTitle}\n                className={classNames({ edit: this.state.isEditing })}\n                onChange={event => this.handleChange(event)}\n                onKeyPress={event => this.handleKeyPress(event, todo.id)}\n                onKeyDown={event => this.handleKeyDown(event)}\n                ref={input => input && input.focus()}\n              />\n            )\n            : (\n              <span />\n            )\n        }\n\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: TodoShape.isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  saveEditedTodo: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TodoShape = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from './TodoItem';\nimport { TodoShape } from './TodoShape';\n\nexport const TodoList\n= (\n  { todos, handleCheck, handleDelete, saveEditedTodo },\n) => (\n  <ul className=\"todo-list\">\n    {\n      todos.map(item => (\n        <TodoItem\n          key={item.id}\n          todo={item}\n          onCheck={handleCheck}\n          onDelete={handleDelete}\n          saveEditedTodo={saveEditedTodo}\n        />\n      ))\n    }\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(TodoShape),\n  handleCheck: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  saveEditedTodo: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { uuid } from 'uuidv4';\n\nexport class NewTodo extends React.Component {\n  state = {\n    todoTitle: '',\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      todoTitle: event.target.value,\n    });\n  }\n\n  handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      const { addNewTodo } = this.props;\n      const todoId = uuid();\n\n      if (this.state.todoTitle.replace(/\\s+/g, '').length !== 0) {\n        addNewTodo({\n          id: todoId,\n          title: this.state.todoTitle,\n          completed: false,\n        });\n\n        this.setState({\n          todoTitle: '',\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={this.state.todoTitle}\n        onChange={event => this.handleChange(event)}\n        onKeyPress={event => this.handleKeyPress(event)}\n      />\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoCount = ({ todoLength }) => (\n  <span className=\"todo-count\">\n    {`${todoLength} ${todoLength === 1 ? 'item' : 'items'} left`}\n  </span>\n);\n\nTodoCount.propTypes = {\n  todoLength: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodosFilter\n= (\n  { handleFilter, handleFilterAll, isAllSelected,\n    isActiveSelected, isCompletedSelected },\n) => (\n  <ul className=\"filters\">\n    <li>\n      <button\n        type=\"button\"\n        className={classNames({ selected: isAllSelected })}\n        onClick={handleFilterAll}\n      >\n        All\n      </button>\n    </li>\n\n    <li>\n      <button\n        type=\"button\"\n        className={classNames({ selected: isActiveSelected })}\n        onClick={event => handleFilter(todo => !todo.completed, event)}\n      >\n        Active\n      </button>\n    </li>\n\n    <li>\n      <button\n        type=\"button\"\n        className={classNames({ selected: isCompletedSelected })}\n        onClick={event => handleFilter(todo => todo.completed, event)}\n      >\n        Completed\n      </button>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  handleFilter: PropTypes.func.isRequired,\n  handleFilterAll: PropTypes.func.isRequired,\n  isAllSelected: PropTypes.bool.isRequired,\n  isActiveSelected: PropTypes.bool.isRequired,\n  isCompletedSelected: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport { TodoList } from './components/TodoList';\nimport { NewTodo } from './components/NewTodo';\nimport { TodoCount } from './components/TodoCount';\nimport { TodosFilter } from './components/TodosFilter';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.todosBackUp = [];\n\n    this.state = {\n      todos: [],\n      isAllSelected: true,\n      isActiveSelected: false,\n      isCompletedSelected: false,\n    };\n  }\n\n  componentDidMount() {\n    const todosFromStorage = localStorage.getItem('state') !== null\n      ? JSON.parse(localStorage.getItem('state')).todos\n      : [];\n\n    this.todosBackUp = todosFromStorage;\n\n    this.setState({\n      todos: todosFromStorage,\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.isCompletedSelected) {\n      const currentState = {\n        todos: [...this.todosBackUp],\n        isAllSelected: this.state.isAllSelected,\n        isActiveSelected: this.state.isActiveSelected,\n        isCompletedSelected: this.state.isCompletedSelected,\n      };\n\n      localStorage.setItem('state', JSON.stringify(currentState));\n    } else {\n      localStorage.setItem('state', JSON.stringify(this.state));\n    }\n  }\n\n  backupTodos = () => {\n    this.todosBackUp = [...this.state.todos];\n  }\n\n  backupCheck = (id) => {\n    this.todosBackUp = this.todosBackUp.map((todo) => {\n      const todoCopy = { ...todo };\n\n      if (todo.id === id) {\n        todoCopy.completed = !todo.completed;\n      }\n\n      return todoCopy;\n    });\n  }\n\n  backupToggleAll = () => {\n    this.todosBackUp = this.todosBackUp.map((todo) => {\n      const todoCopy = { ...todo };\n\n      todoCopy.completed = false;\n\n      return todoCopy;\n    });\n  }\n\n  backupToggle = () => {\n    this.todosBackUp = this.todosBackUp.map((todo) => {\n      const todoCopy = { ...todo };\n\n      if (!todoCopy.completed) {\n        todoCopy.completed = true;\n      }\n\n      return todoCopy;\n    });\n  }\n\n  addNewTodo = (newTodo) => {\n    if (this.state.isCompletedSelected) {\n      this.todosBackUp = [...this.todosBackUp, newTodo];\n    } else {\n      this.setState(prevState => ({\n        todos: [...prevState.todos, newTodo],\n      }),\n      () => this.backupTodos());\n    }\n  }\n\n  handleCheck = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        const todoCopy = { ...todo };\n\n        if (todo.id === id) {\n          todoCopy.completed = !todo.completed;\n        }\n\n        return todoCopy;\n      }),\n    }),\n    () => this.backupCheck(id));\n  }\n\n  handleDelete = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }),\n    () => this.backupTodos());\n  }\n\n  toggleAll = () => {\n    if (this.state.todos.every(todo => todo.completed === true)) {\n      this.setState(prevState => ({\n        todos: prevState.todos.map((todo) => {\n          const todoCopy = { ...todo };\n\n          todoCopy.completed = false;\n\n          return todoCopy;\n        }),\n      }),\n      () => this.backupToggleAll());\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todos.map((todo) => {\n          const todoCopy = { ...todo };\n\n          if (!todoCopy.completed) {\n            todoCopy.completed = true;\n          }\n\n          return todoCopy;\n        }),\n      }),\n      () => this.backupToggle());\n    }\n  }\n\n  clearCompleted = () => {\n    if (this.state.isCompletedSelected) {\n      this.setState(prevState => ({\n        todos: prevState.todos.filter(todo => !todo.completed),\n      }),\n      () => {\n        this.todosBackUp = this.todosBackUp.filter(todo => !todo.completed);\n      });\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todos.filter(todo => !todo.completed),\n      }),\n      () => this.backupTodos());\n    }\n  }\n\n  handleFilter = (callback, event) => {\n    if (event.target.innerHTML === 'Active') {\n      this.setState({\n        todos: this.todosBackUp.filter(callback),\n        isAllSelected: false,\n        isActiveSelected: true,\n        isCompletedSelected: false,\n      });\n    } else if (event.target.innerHTML === 'Completed') {\n      this.setState({\n        todos: this.todosBackUp.filter(callback),\n        isAllSelected: false,\n        isActiveSelected: false,\n        isCompletedSelected: true,\n      });\n    }\n  }\n\n  handleFilterAll = () => {\n    this.setState({\n      todos: [...this.todosBackUp],\n      isAllSelected: true,\n      isActiveSelected: false,\n      isCompletedSelected: false,\n    });\n  }\n\n  saveEditedTodo = (editedTodo) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        let todoCopy = { ...todo };\n\n        if (todoCopy.id === editedTodo.id) {\n          todoCopy = { ...editedTodo };\n        }\n\n        return todoCopy;\n      }),\n    }),\n    () => this.backupTodos());\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addNewTodo={this.addNewTodo} />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.toggleAll}\n          />\n          <label htmlFor=\"toggle-all\">\n            Mark all as complete\n          </label>\n\n          <TodoList\n            todos={this.state.todos}\n            handleCheck={this.handleCheck}\n            handleDelete={this.handleDelete}\n            saveEditedTodo={this.saveEditedTodo}\n          />\n        </section>\n\n        <footer className=\"footer\">\n          <TodoCount\n            todoLength={\n              this.state.isCompletedSelected\n                ? this.todosBackUp.filter(todo => !todo.completed).length || 0\n                : this.state.todos.filter(todo => !todo.completed).length || 0\n            }\n          />\n\n          <TodosFilter\n            handleFilter={this.handleFilter}\n            handleFilterAll={this.handleFilterAll}\n            isAllSelected={this.state.isAllSelected}\n            isActiveSelected={this.state.isActiveSelected}\n            isCompletedSelected={this.state.isCompletedSelected}\n          />\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.clearCompleted}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}